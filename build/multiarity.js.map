{"version":3,"sources":["/Users/andrewstern/Developer/functions/multiArity/lib/multiarity.js"],"names":["_$670","require","module","exports","multiArity","arguments","length","Error","args$673","toArray","arities$674","ctx$675","recur","callByArity$677","opts$676","first","isPlainObject","isAllFns$672","values","extend","arityMapForFunctions$671","args$678","fn_len$679","fn_for_arity$680","has","isUndefined","apply","fns_list$681","zipObject","map","_1$683","arr$684","all","isFunction"],"mappings":"AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARA;AAUA,IAAIA,KAAA,GAAIC,OAAA,CAAQ,QAAR,CAAR,CAVA;AAYAC,MAAA,CAAOC,OAAP,GAAiB,SAASC,UAAT,GAAsB;AAAA,IACtC,IAAIC,SAAA,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAAA,QAC3B,MAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN,CAD2B;AAAA,KADU;AAAA,IAKtC,IAAIC,QAAA,GAAOR,KAAA,CAAES,OAAF,CAAUJ,SAAV,CAAX,EACEK,WAAA,GAAU,EADZ,EAEEC,OAAA,GAAM,EAAEC,KAAA,EAAOC,eAAT,EAFR,EAGEC,QAAA,GAAOd,KAAA,CAAEe,KAAF,CAAQP,QAAR,CAHT,CALsC;AAAA,IAUtC,IAAIR,KAAA,CAAEgB,aAAF,CAAgBF,QAAhB,CAAJ,EAA2B;AAAA,QAC1B,IAAI,CAACG,YAAA,CAASjB,KAAA,CAAEkB,MAAF,CAASJ,QAAT,CAAT,CAAL,EAA+B;AAAA,YAC9B,MAAM,IAAIP,KAAJ,CAAU,uCAAV,CAAN,CAD8B;AAAA,SADL;AAAA,QAI1BP,KAAA,CAAEmB,MAAF,CAAST,WAAT,EAAkBI,QAAlB,EAJ0B;AAAA,KAA3B,MAKO;AAAA,QACNd,KAAA,CAAEmB,MAAF,CAAST,WAAT,EAAkBU,wBAAA,CAAqBZ,QAArB,CAAlB,EADM;AAAA,KAf+B;AAAA,IAmBrC,OAAOK,eAAP,CAnBqC;AAAA,IAqBrC,SAASA,eAAT,GAAwB;AAAA,QACvB,IAAIQ,QAAA,GAAOrB,KAAA,CAAES,OAAF,CAAUJ,SAAV,CAAX,EACEiB,UAAA,GAASD,QAAA,CAAKf,MADhB,EAEEiB,gBAAA,GAAevB,KAAA,CAAEwB,GAAF,CAAMd,WAAN,EAAeY,UAAf,IACdZ,WAAA,CAAQY,UAAR,CADc,GACIZ,WAAA,CAAQ,WAAR,CAHrB,CADuB;AAAA,QAKtB,IAAIV,KAAA,CAAEyB,WAAF,CAAcF,gBAAd,CAAJ,EAAiC;AAAA,YAChC,MAAM,IAAIhB,KAAJ,CAAU,2BAA2Be,UAArC,CAAN,CADgC;AAAA,SALX;AAAA,QAQxB,OAAOC,gBAAA,CAAaG,KAAb,CAAmBf,OAAnB,EAAwBU,QAAxB,CAAP,CARwB;AAAA,KArBa;AAAA,CAAvC,CAZA;AA6CA,SAASD,wBAAT,CAA+BO,YAA/B,EAAyC;AAAA,IACxC,OAAO3B,KAAA,CAAE4B,SAAF,CAAY5B,KAAA,CAAE6B,GAAF,CAAMF,YAAN,EA5CJ,UAAAG,MAAA;AAAA,QAIV,OAJUA,MAAA,CA4CyBxB,MAxCnC,CAJU;AAAA,KA4CI,CAAZ,EAA2CqB,YAA3C,CAAP,CADwC;AAAA,CA7CzC;AAiDA,SAASV,YAAT,CAAmBc,OAAnB,EAAwB;AAAA,IACvB,OAAO/B,KAAA,CAAEgC,GAAF,CAAMD,OAAN,EAAW/B,KAAA,CAAEiC,UAAb,CAAP,CADuB;AAAA","file":"multiarity.js","sourcesContent":["/*\n * multiArity\n * https://github.com/androidStern/multiarity\n *\n * Copyright (c) 2014 Andrew Stern\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar _ = require(\"lodash\");\n\nmodule.exports = function multiArity() {\n\tif (arguments.length === 0) {\n\t\tthrow new Error(\"multiarity expects at least 1 arument\");\n\t}\n\t\n\tvar args = _.toArray(arguments),\n\t\t\tarities = {},\n\t\t\tctx = { recur: callByArity },\n\t\t\topts = _.first(args);\n\t\n\tif (_.isPlainObject(opts)) {\n\t\tif (!isAllFns(_.values(opts))) {\n\t\t\tthrow new Error(\"multiarity vals must be type function\");\n\t\t}\n\t\t_.extend(arities, opts);\n\t} else {\n\t\t_.extend(arities, arityMapForFunctions(args));\n\t}\n\n  return callByArity;\n\n  function callByArity () {\n  \tvar args = _.toArray(arguments),\n  \t\t\tfn_len = args.length,\n  \t\t\tfn_for_arity = _.has(arities, fn_len) ? \n  \t\t\t\tarities[fn_len] : arities[\"otherwise\"];\n\t\t\t\tif (_.isUndefined(fn_for_arity)) {\n\t\t\t\t\tthrow new Error(\"wrong number of args: \" + fn_len);\n\t\t\t\t}\n\t\treturn fn_for_arity.apply(ctx, args);\n  }\n};\n\nfunction arityMapForFunctions (fns_list) {\n\treturn _.zipObject(_.map(fns_list, Î»(_1.length)), fns_list);\n}\n\nfunction isAllFns (arr) {\n\treturn _.all(arr, _.isFunction);\n}\n\n\n"],"sourceRoot":"/source/"}