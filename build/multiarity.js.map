{"version":3,"sources":["/Users/andrewstern/Developer/functions/multiArity/lib/multiarity.js"],"names":["_$1046","require","module","exports","multiArity","arguments","length","Error","args$1049","toArray","arities$1050","ctx$1051","recur","callByArity$1053","opts$1052","first","isPlainObject","isAllFns$1048","values","extend","arityMapForFunctions$1047","args$1054","fn_len$1055","fn_for_arity$1056","has","isUndefined","apply","fns_list$1057","zipObject","map","_1$1059","arr$1060","all","isFunction"],"mappings":"AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARA;AAUA,IAAIA,MAAA,GAAIC,OAAA,CAAQ,QAAR,CAAR,CAVA;AAYAC,MAAA,CAAOC,OAAP,GAAiB,SAASC,UAAT,GAAsB;AAAA,IACtC,IAAIC,SAAA,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAAA,QAC3B,MAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN,CAD2B;AAAA,KADU;AAAA,IAKtC,IAAIC,SAAA,GAAOR,MAAA,CAAES,OAAF,CAAUJ,SAAV,CAAX,EACEK,YAAA,GAAU,EADZ,EAEEC,QAAA,GAAM,EAAEC,KAAA,EAAOC,gBAAT,EAFR,EAGEC,SAAA,GAAOd,MAAA,CAAEe,KAAF,CAAQP,SAAR,CAHT,CALsC;AAAA,IAUtC,IAAIR,MAAA,CAAEgB,aAAF,CAAgBF,SAAhB,CAAJ,EAA2B;AAAA,QAC1B,IAAI,CAACG,aAAA,CAASjB,MAAA,CAAEkB,MAAF,CAASJ,SAAT,CAAT,CAAL,EAA+B;AAAA,YAC9B,MAAM,IAAIP,KAAJ,CAAU,uCAAV,CAAN,CAD8B;AAAA,SADL;AAAA,QAI1BP,MAAA,CAAEmB,MAAF,CAAST,YAAT,EAAkBI,SAAlB,EAJ0B;AAAA,KAA3B,MAKO;AAAA,QACNd,MAAA,CAAEmB,MAAF,CAAST,YAAT,EAAkBU,yBAAA,CAAqBZ,SAArB,CAAlB,EADM;AAAA,KAf+B;AAAA,IAmBrC,OAAOK,gBAAP,CAnBqC;AAAA,IAqBrC,SAASA,gBAAT,GAAwB;AAAA,QACvB,IAAIQ,SAAA,GAAOrB,MAAA,CAAES,OAAF,CAAUJ,SAAV,CAAX,EACEiB,WAAA,GAASD,SAAA,CAAKf,MADhB,EAEEiB,iBAAA,GAAevB,MAAA,CAAEwB,GAAF,CAAMd,YAAN,EAAeY,WAAf,IACdZ,YAAA,CAAQY,WAAR,CADc,GACIZ,YAAA,CAAQ,WAAR,CAHrB,CADuB;AAAA,QAKtB,IAAIV,MAAA,CAAEyB,WAAF,CAAcF,iBAAd,CAAJ,EAAiC;AAAA,YAChC,MAAM,IAAIhB,KAAJ,CAAU,2BAA2Be,WAArC,CAAN,CADgC;AAAA,SALX;AAAA,QAQxB,OAAOC,iBAAA,CAAaG,KAAb,CAAmBf,QAAnB,EAAwBU,SAAxB,CAAP,CARwB;AAAA,KArBa;AAAA,CAAvC,CAZA;AA6CA,SAASD,yBAAT,CAA+BO,aAA/B,EAAyC;AAAA,IACxC,OAAO3B,MAAA,CAAE4B,SAAF,CAAY5B,MAAA,CAAE6B,GAAF,CAAMF,aAAN,EA5CJ,UAAAG,OAAA;AAAA,QAIV,OAJUA,OAAA,CA4CyBxB,MAxCnC,CAJU;AAAA,KA4CI,CAAZ,EAA2CqB,aAA3C,CAAP,CADwC;AAAA,CA7CzC;AAiDA,SAASV,aAAT,CAAmBc,QAAnB,EAAwB;AAAA,IACvB,OAAO/B,MAAA,CAAEgC,GAAF,CAAMD,QAAN,EAAW/B,MAAA,CAAEiC,UAAb,CAAP,CADuB;AAAA","file":"multiarity.js","sourcesContent":["/*\n * multiArity\n * https://github.com/androidStern/multiarity\n *\n * Copyright (c) 2014 Andrew Stern\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar _ = require(\"lodash\");\n\nmodule.exports = function multiArity() {\n\tif (arguments.length === 0) {\n\t\tthrow new Error(\"multiarity expects at least 1 arument\");\n\t}\n\t\n\tvar args = _.toArray(arguments),\n\t\t\tarities = {},\n\t\t\tctx = { recur: callByArity },\n\t\t\topts = _.first(args);\n\t\n\tif (_.isPlainObject(opts)) {\n\t\tif (!isAllFns(_.values(opts))) {\n\t\t\tthrow new Error(\"multiarity vals must be type function\");\n\t\t}\n\t\t_.extend(arities, opts);\n\t} else {\n\t\t_.extend(arities, arityMapForFunctions(args));\n\t}\n\n  return callByArity;\n\n  function callByArity () {\n  \tvar args = _.toArray(arguments),\n  \t\t\tfn_len = args.length,\n  \t\t\tfn_for_arity = _.has(arities, fn_len) ? \n  \t\t\t\tarities[fn_len] : arities[\"otherwise\"];\n\t\t\t\tif (_.isUndefined(fn_for_arity)) {\n\t\t\t\t\tthrow new Error(\"wrong number of args: \" + fn_len);\n\t\t\t\t}\n\t\treturn fn_for_arity.apply(ctx, args);\n  }\n};\n\nfunction arityMapForFunctions (fns_list) {\n\treturn _.zipObject(_.map(fns_list, Î»(_1.length)), fns_list);\n}\n\nfunction isAllFns (arr) {\n\treturn _.all(arr, _.isFunction);\n}\n\n\n"],"sourceRoot":"/source/"}